########### Github Configuration
#Nach Git installation auf Maschine git einrichten
    git config --global user.name <Name>
    git config --global user.email <github E-Mail adresse (ggf. private)>
#채ndert den Branche von master -> main
    git config --global init.defaultBranch main
#git output farbig darstellen
    git config --global color.ui auto
#Branche verwaltung zu mergin 
    git config --global pull.rebase false
#github commit message 체ber "git commit" statt "git commit -m" separates fenster
    git config --global core.editor "code --wait"


#ssh key erstellpr체fen 
    ls ~/.ssh/id_ed25519.pub
#ssh key erstellen 
    ssh-keygen -t ed25519 -C <github e-mail>
#ssh key anzeigen  
    cat ~/.ssh/id_ed25519.pub
# dann ssh Key in Github Einstellungen kopieren 
#Verbindung auf Maschine verifizieren; [offizielle Github Seite zum verifizieren] (https://docs.github.com/en/authentication/connecting-to-github-with-ssh/testing-your-ssh-connection)
    $ ssh -T git@github.com
#Commands related to a remote repository:
# Bei der URL darauf achten, ob SSH,HTTPS,CLI ausgew채hlt ist
    git clone git@github.com:USER-NAME/REPOSITORY-NAME.git
    git push or git push origin main (Both accomplish the same goal in this context)
#Commands related to the workflow:
    git add .
    git commit -m "A message describing what you have done to make this snapshot different"
    git commit
#Commands related to checking status or log history
    git status
    git log
    git remote -v
#The basic Git syntax is program | action | destination.